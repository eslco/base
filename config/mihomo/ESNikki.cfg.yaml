# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 机场订阅
proxy-providers:
  ESub:
    url: "https://sub.example.com/sub?token=XXX&clash"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.apple.com/library/test/success.html
      interval: 300
    proxy: direct

# 节点信息
proxies:
  - {name: Direct, type: direct}
  - {name: Reject, type: reject}
# General Settings
port: 7890
socks-port: 20087
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: false
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
# keep-alive-idle: 600
# keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/nikki/run"
external-ui-name: zashboard
external-ui-url: "https://gh-proxy.com/https://github.com/Zephyruso/zashboard/archive/gh-pages.zip"

# Sniffer Module
# 注意: Sniffer 模块，开启后会增加 CPU 和内存的使用
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880, 2052, 2053, 2082, 2086, 2095]
      override-destination: true
    TLS:
      ports: [443, 8443, 853]
    QUIC:
      ports: [443, 8443, 2053, 2083, 2087, 2096]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"

# Outbound
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS Module
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.market.xiaomi.com"    
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "*.localhost"
    - "*.local"    
    - "*.lan"    
  default-nameserver:
    - 8.8.4.4
    - 1.0.0.1
  proxy-server-nameserver:
    - https://223.6.6.6/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.6.6.6
    - 119.28.28.28
 
# 锚点引用 Anthor: Mihomo
# 注意锚点必须放在引用的上方， 也可以集中把锚点全部放.yaml顶部
CN: &cn {type: select, proxies: [ Direct, 🚀 Proxy, 🔯 JP Back, 🔯 HK Back, 🇦🇺 AU, 🇬🇧 GB, 🇹🇼 TW, 🇸🇬 SG, 🇺🇸 US, ☑️ Manual]}
PR: &pr {type: select, proxies: [ ☑️ Manual, 🚀 Proxy, 🔯 JP Back, 🔯 HK Back, ♻️ JP Auto, ♻️ HK Auto, 🇦🇺 AU, 🇬🇧 GB, 🇸🇬 SG, 🇹🇼 TW, 🇺🇸 US, Direct]} # 🇭🇰 HK, 🇯🇵 JP
TR: &dtcn {type: select, proxies: [ ☑️ Manual, 🚀 Proxy, Direct]}

# 代理組 Group Policy
# 注意: 如果有多個代理組, 必須保證每個代理組的名稱唯一, 否則將會無法切換
# (Must be unique for each group, otherwise it will not work) 🇭🇰 HK, 🇯🇵 JP
proxy-groups:
  - {name: 🚀 Proxy, type: select, proxies: [ ☑️ Manual, 🔯 JP Back, 🔯 HK Back, ♻️ JP Auto, ♻️ HK Auto, 🇦🇺 AU, 🇬🇧 GB, 🇹🇼 TW, 🇸🇬 SG, 🇺🇸 US, Direct]}
  - {name: ☑️ Manual, type: select, include-all: true}
  - {name: 💶 PayPal, <<: *pr} 
  - {name: 📹 YouTube, <<: *pr}
  - {name: 📺 Bilibili, <<: *cn}
  - {name: 🍀 Google, <<: *pr}
  - {name: 🔯 AI, <<: *pr}
  - {name: ☕ DEX, <<: *pr}
  - {name: 👨🏿‍💻 GitHub, <<: *pr}
  - {name: 📺 IPTV Global, <<: *pr}
  - {name: 🎵 TikTok, <<: *pr}
  - {name: 📊 EMarket, <<: *pr}
  - {name: ☎️ Telegram, <<: *pr}
  - {name: 🎥 ProxyMedia, <<: *pr}
  - {name: 🌐 Social+, <<: *pr}
  - {name: 📱 WhatsApp, <<: *pr}
  - {name: 📞 WeChat, <<: *cn}
  - {name: 📕 XHS RedNote, <<: *cn}
  - {name: 🔯 HK Back, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(🇭🇰|HK|港|(?i)🇭🇰|HK|澳|hong|Macau|MO|HKG|MFM|Central|Kowloon|观塘|中环))^((?!(🇦🇺|AU|澳|🇹🇼|TW|台|🇯🇵|JP|日|韩|🇰🇷|KR|🇸🇬|SG|坡|深|🇺🇸|US|美)).)*$"}
  - {name: 🔯 JP Back, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(🇯🇵|JP|日|(?i)🇰🇷|KR|韩|Korea|🇯🇵|JP|日|Japan|Tokyo|Osaka|NRT|KIX|NGO|CTS|FUK|东京|大阪|[^-]日|沪日))^((?!(🇦🇺|AU|澳|🇹🇼|TW|台|韩|🇰🇷|KR|🇸🇬|SG|坡|深|🇺🇸|US|美)).)*$"}
  - {name: ♻️ HK Auto, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(🇭🇰|HK|港|(?i)🇭🇰|HK|澳|hong|Macau|MO|HKG|MFM|Central|Kowloon|观塘|中环))^((?!(🇦🇺|AU|澳|🇹🇼|TW|台|🇯🇵|JP|日|韩|🇰🇷|KR|🇸🇬|SG|坡|深|🇺🇸|US|美)).)*$"}
  - {name: ♻️ JP Auto, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(🇯🇵|JP|日|(?i)🇰🇷|KR|韩|Korea|🇯🇵|JP|日|Japan|Tokyo|Osaka|NRT|KIX|NGO|CTS|FUK|东京|大阪|[^-]日|沪日))^((?!(🇦🇺|AU|澳|🇹🇼|TW|台|韩|🇰🇷|KR|🇸🇬|SG|坡|深|🇺🇸|US|美)).)*$"}
  - {name: 🇦🇺 AU, type: select, include-all: true, filter: "🇦🇺|aus|Aus|澳|悉尼|墨尔本|布里斯班|堪培拉|珀斯|阿德莱德|Darwin|Sydney|Melbourne|Brisbane|Canberra|Perth|Adelaide|DRW|SYD|MEL|BNE|CBR|PER|ADL"}
  - {name: 🇬🇧 GB, type: select, include-all: true, filter: "(?i)🇬🇧|GB|UK|Britain|英国|伦敦|曼彻斯特|伯明翰|利兹|London|Manchester|Birmingham|Leeds|LON|MAN|BHX|LBA"}                            
  # - {name: 🇭🇰 HK, type: select, include-all: true, filter: "(?i)🇭🇰|HK|港|澳門|hong|Macau|MO|HKG|MFM|Central|Kowloon|觀塘|中環|銅鑼灣"}
  # - {name: 🇯🇵 JP, type: select, include-all: true, filter: "(?i)🇰🇷|KR|韩|Korea|🇯🇵|JP|日|Japan|Tokyo|Osaka|Nagoya|Fukuoka|NRT|KIX|NGO|CTS|FUK|东京|大阪|神奈川|埼玉|[^-]日|沪日|深日"}
  # # - {name: 🇰🇷 KR, type: select, include-all: true, filter: "(?i)🇰🇷|KR|韩|Korea|KOR|Seoul|首尔|春川|釜山|大邱|仁川|光州|大田|韩|韓|ICN|PUS|TAE|INC|KWJ|CJJ"}
  - {name: 🇸🇬 SG, type: select, include-all: true, filter: "(?i)🇸🇬|SG|新加坡|坡|狮城|Singapore|Changi|Jurong|Woodlands|SIN|XSP|樟宜|裕廊|兀兰"}
  - {name: 🇹🇼 TW, type: select, include-all: true, filter: "(?i)🇹🇼|TW|taiwan|台|臺灣|新北|彰化|桃園|台中|高雄|Taipei|Taichung|Kaohsiung|TPE|KHH|TSA|RMQ"}
  - {name: 🇺🇸 US, type: select, include-all: true, filter: "🇺🇸|US|美|United States|San Jose|Portland|Dallas|Phoenix|Las Vegas|Angeles|Seattle|Chicago|New York|Atlanta|ATL|BUF|DFW|EWR|IAD|LAX|MCI|MIA|ORD|PHX|PDX|SEA|SJC|JFK|LGA"}
  - {name: ♻️ Auto, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(Direct)).)*$"}
  # - {name: 🐬 OneDrive, <<: *pr}
  - {name: 🎵 Spotify, <<: *pr}
  # - {name: ✈️ Speedtest, <<: *pr}
  - {name: Ⓜ️ Microsoft, <<: *pr}
  - {name: 🍎 Apple,<<: *dtcn }
  - {name: 🎯 DirectN, type: select, proxies: [Direct, 🚀 Proxy, ☑️ Manual]}
  - {name: 🐟 Final, <<: *pr}
# 規則匹配
# 此規則尚未作DNS防泄漏處理，because of the (弊大於利) CON is more than benefit
rules:
  - DOMAIN-SUFFIX,aesin.eu,🚀 Proxy
  # PayPal
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,speedtest_domain,🚀 Proxy  
  # ADBlock
  - RULE-SET,ttblock,Reject
  - RULE-SET,httpdns_adblock,Reject
  - RULE-SET,twitch_reject,Reject
  - RULE-SET,apple_domain,🍎 Apple
  # Talkatone
  - RULE-SET,ttdirect,Direct  
  - RULE-SET,ttproxy,🔯 AI
  # DEX
  - RULE-SET,dex_domain,☕ DEX
  # AI
  - RULE-SET,aide,🔯 AI
  - RULE-SET,ai,🔯 AI
  - RULE-SET,ai_domain,🔯 AI

  # EMarket  
  # Amazon Alibaba Ebay Shopee JD
  - RULE-SET,alibaba_list,📊 EMarket
  - RULE-SET,alibaba_domain,📊 EMarket
  - RULE-SET,amazon_domain,📊 EMarket
  - RULE-SET,shopee_domain,📊 EMarket
  - RULE-SET,ebay_domain,📊 EMarket
  - RULE-SET,jd_domain,📊 EMarket

  # Bili
  - RULE-SET,bilibili,📺 Bilibili
  - RULE-SET,bilibili_global,📺 Bilibili
  # ProxyMedia
  - RULE-SET,netflix_domain,🎥 ProxyMedia
  # IM Apps
  - RULE-SET,wechat_domain,📞 WeChat
  - RULE-SET,whatsapp,📱 WhatsApp
  - RULE-SET,whatsapp_list,📱 WhatsApp
  - RULE-SET,whatsapp_domain,📱 WhatsApp
  - RULE-SET,rakuten_domain,📱 WhatsApp
  - RULE-SET,line_domain,📱 WhatsApp
  - RULE-SET,signal_domain,🚀 Proxy
  - RULE-SET,signal_list,🚀 Proxy
  - RULE-SET,telegram_domain,☎️ Telegram
  # LinkedIn
  - RULE-SET,linkedin,🚀 Proxy
  - RULE-SET,linkedin_cn,Direct
  # Social+
  - RULE-SET,facebook_domain,🌐 Social+
  - RULE-SET,instagram_domain,🌐 Social+
  - RULE-SET,threads_domain,🌐 Social+
  - RULE-SET,twitter_domain,🌐 Social+

  # Spotify
  - RULE-SET,spotify_domain,🎵 Spotify
  # IPTV
  - RULE-SET,iptv_global,📺 IPTV Global
  - RULE-SET,iptv_cn,Direct
  - RULE-SET,iptv_tw,🇹🇼 TW
  # TikTok
  - RULE-SET,tiktok_list,🎵 TikTok
  - RULE-SET,tiktok_domain,🎵 TikTok  
  # Twitch
  - RULE-SET,twitch_proxy,🚀 Proxy
  - RULE-SET,twitch_direct,Direct
  # Download Games
  - RULE-SET,category_games_cn,Direct
  - RULE-SET,category-game-platforms-download-cn,Direct
  - RULE-SET,category_games,🚀 Proxy
  - RULE-SET,category--android-app,🚀 Proxy  
  - RULE-SET,category-game-platforms-download,🚀 Proxy

  # Apps
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,Ⓜ️ Microsoft
  - RULE-SET,microsoft_domain,Ⓜ️ Microsoft
# - RULE-SET,speedtest_domain,✈️ Speedtest

  # XHS RedNote
  - RULE-SET,xhs_rednote,📕 XHS RedNote
  - RULE-SET,rednote,📕 XHS RedNote
  # Private
  - RULE-SET,private_domain,Direct
  # GFW
  - RULE-SET,gfw_domain,🚀 Proxy
  - RULE-SET,geolocation-!cn,🚀 Proxy
  - RULE-SET,cn_domain,Direct
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 ProxyMedia,no-resolve
  - RULE-SET,telegram_ip,☎️ Telegram,no-resolve
  - RULE-SET,cn_ip,Direct
  - MATCH,🐟 Final

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
# ES Rules.ymal    
# XHS RedNote
  rednote: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/general/XiaoHongShu/XiaoHongShu.list"}
  xhs_rednote: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/XiaoHongShu/XiaoHongShu.list"}
  # DEX
  dex_domain: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Clash/DEX/DEX.list"}
  # ADBlock
  ttblock: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Clash/Talkatone/ttblock.list"}
  twitch_reject: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Surge/Twitch/TR.list"}
  httpdns_adblock: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/category-httpdns-cn.mrs"}
  # Whatsapp
  whatsapp: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Clash/Whatsapp/Whatsapp.list"}
  whatsapp_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/whatsapp.list"}
  whatsapp_list: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Whatsapp/Whatsapp.list"}
  # IM Apps
  signal_list: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/general/signal/signal.list"}
  signal_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/signal.mrs"}
  snapchat_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/snapchat.list"}
  messenger_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/messenger.mrs"}
  rakuten_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/rakuten.mrs"}
  line_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/line.mrs"}
  # WeChat
  wechat_domain: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/WeChat/WeChat.list"}
  # AI
  aide: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/general/AIDE.list"}
  ai: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/general/AI.list"}

  #Bilibili
  bilibili: { <<: *class, url: "https://github.com/ACL4SSR/ACL4SSR/raw/master/Clash/Ruleset/Bilibili.list"}
  bilibili_global: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/BiliBili/BiliBili.list"}
  # Emarket    
    # Alibaba 1688 Taobao Goofish
  alibaba_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/alibaba.mrs"}
  alibaba_list: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Alibaba/Alibaba.list"}
    # Amazon
  amazon_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/amazon.mrs"}
    # Shopee
  shopee_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/shopee.mrs"}
    # eBay
  ebay_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/ebay.mrs"}
    # JD
  jd_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/jd.mrs"}
  # IPTV
  iptv_global: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/general/IPTV_Global/IPTV9.list"}
  iptv_tw: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/general/IPTV_Global/IPTV9_TW.list"}
  iptv_cn: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/IPTVMainland/IPTVMainland.list"}
  # LinkedIn
  linkedin: { <<: *class, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/linkedin.mrs"}
  linkedin_cn: { <<: *class, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/linkedin_cn.mrs"}
  # Talkatone
  ttdirect: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Clash/Talkatone/ttdirect.list"}
  ttproxy: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Clash/Talkatone/ttproxy.list"}
  # TikTok
  tiktok_list: { <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/TikTok/TikTok.list"}
# Downloads Games
  category_games_cn: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/category-games-cn.mrs"}
  category_games: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/category-games-!cn.mrs"}
  category-game-platforms-download: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/category-game-platforms-download.mrs"}
  category-game-platforms-download-cn: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/category-game-platforms-download@cn.mrs"}
  category--android-app: { *domain, url <<:"https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/category-android-app-download.mrs"}
  # Social+ Apps
  twitter_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/twitter.mrs"}
  facebook_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/facebook.mrs"}
  instagram_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/instagram.mrs"}
  threads_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/threads.mrs"}
  # Spotify
  spotify_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/spotify.mrs"}
  # Twitch
  twitch_direct : { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Surge/Twitch/TD.list"}
  twitch_proxy: { <<: *class, url: "https://github.com/eslco/base/raw/main/rule/Surge/Twitch/TP.list"}
  twitch_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/twitch.mrs"}
# ES Rules.yaml

# qcy_nikki.config.yaml
  private_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/private.mrs"}
  # proxylite: { <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/main/proxy.list"}
  ai_domain: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/category-ai-!cn.mrs"}
  youtube_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/ookla-speedtest.mrs"} 
  tiktok_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/tiktok.list"}
  gfw_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geosite/cn.mrs"}
# GeoIP  
  cn_ip: { <<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/meta/geo/geoip/netflix.mrs"}