// @generated by protobuf-ts 2.9.0 with parameter output_javascript_es2019
// @generated from protobuf file "protos/dmView.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message CommandDm
 */
export interface CommandDm {
    /**
     * @generated from protobuf field: int64 id = 1;
     */
    id: bigint;
    /**
     * @generated from protobuf field: int64 oid = 2;
     */
    oid: bigint;
    /**
     * @generated from protobuf field: int64 mid = 3;
     */
    mid: bigint;
    /**
     * @generated from protobuf field: string command = 4;
     */
    command: string;
    /**
     * @generated from protobuf field: string content = 5;
     */
    content: string;
    /**
     * @generated from protobuf field: int32 progress = 6;
     */
    progress: number;
    /**
     * @generated from protobuf field: string ctime = 7;
     */
    ctime: string;
    /**
     * @generated from protobuf field: string mtime = 8;
     */
    mtime: string;
    /**
     * @generated from protobuf field: string extra = 9;
     */
    extra: string;
    /**
     * @generated from protobuf field: string idStr = 10;
     */
    idStr: string;
}
/**
 * @generated from protobuf message DmView
 */
export interface DmView {
    /**
     * @generated from protobuf field: repeated CommandDm commandDms = 1;
     */
    commandDms: CommandDm[];
}
/**
 * @generated from protobuf message DmViewReply
 */
export interface DmViewReply {
    /**
     * @generated from protobuf field: DmView dmView = 22;
     */
    dmView?: DmView;
}
declare class CommandDm$Type extends MessageType<CommandDm> {
    constructor();
    create(value?: PartialMessage<CommandDm>): CommandDm;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CommandDm): CommandDm;
    internalBinaryWrite(message: CommandDm, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message CommandDm
 */
export declare const CommandDm: CommandDm$Type;
declare class DmView$Type extends MessageType<DmView> {
    constructor();
    create(value?: PartialMessage<DmView>): DmView;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DmView): DmView;
    internalBinaryWrite(message: DmView, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message DmView
 */
export declare const DmView: DmView$Type;
declare class DmViewReply$Type extends MessageType<DmViewReply> {
    constructor();
    create(value?: PartialMessage<DmViewReply>): DmViewReply;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DmViewReply): DmViewReply;
    internalBinaryWrite(message: DmViewReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message DmViewReply
 */
export declare const DmViewReply: DmViewReply$Type;
export {};
