// @generated by protobuf-ts 2.9.0 with parameter output_javascript_es2019
// @generated from protobuf file "protos/modeStatus.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ModeStatus
 */
export interface ModeStatus {
    /**
     * @generated from protobuf field: repeated Mode modes = 1;
     */
    modes: Mode[];
}
/**
 * @generated from protobuf message Mode
 */
export interface Mode {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: int32 f4 = 4;
     */
    f4: number;
    /**
     * @generated from protobuf field: F5 f5 = 5;
     */
    f5?: F5;
}
/**
 * @generated from protobuf message F5
 */
export interface F5 {
    /**
     * @generated from protobuf field: int32 f1 = 1;
     */
    f1: number;
}
declare class ModeStatus$Type extends MessageType<ModeStatus> {
    constructor();
    create(value?: PartialMessage<ModeStatus>): ModeStatus;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModeStatus): ModeStatus;
    internalBinaryWrite(message: ModeStatus, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ModeStatus
 */
export declare const ModeStatus: ModeStatus$Type;
declare class Mode$Type extends MessageType<Mode> {
    constructor();
    create(value?: PartialMessage<Mode>): Mode;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Mode): Mode;
    internalBinaryWrite(message: Mode, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message Mode
 */
export declare const Mode: Mode$Type;
declare class F5$Type extends MessageType<F5> {
    constructor();
    create(value?: PartialMessage<F5>): F5;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: F5): F5;
    internalBinaryWrite(message: F5, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message F5
 */
export declare const F5: F5$Type;
export {};
